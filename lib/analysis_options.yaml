linter:
  rules:
    # https://github.com/dart-lang/pedantic/blob/master/lib/analysis_options.1.9.0.yaml
    - always_declare_return_types
    - always_require_non_null_named_parameters
    - annotate_overrides
    - avoid_empty_else
    - avoid_init_to_null
    - avoid_null_checks_in_equality_operators
    - avoid_relative_lib_imports
    - avoid_return_types_on_setters
    - avoid_shadowing_type_parameters
    - avoid_types_as_parameter_names
    - camel_case_extensions
    - curly_braces_in_flow_control_structures
    - empty_catches
    - empty_constructor_bodies
    - library_names
    - library_prefixes
    - no_duplicate_case_values
    - null_closures
    - omit_local_variable_types
    - prefer_adjacent_string_concatenation
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_contains
    - prefer_equal_for_default_values
    - prefer_final_fields
    - prefer_for_elements_to_map_fromIterable
    - prefer_generic_function_type_aliases
    - prefer_if_null_operators
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_iterable_whereType
    - prefer_single_quotes
    - prefer_spread_collections
    - recursive_getters
    - slash_for_doc_comments
    - type_init_formals
    - unawaited_futures
    - unnecessary_const
    - unnecessary_new
    - unnecessary_null_in_if_null_operators
    - unnecessary_this
    - unrelated_type_equality_checks
    - use_function_type_syntax_for_parameters
    - use_rethrow_when_possible
    - valid_regexps

    # https://github.com/tenhobi/effective_dart/blob/master/lib/analysis_options.1.2.0.yaml
    # STYLE
    - camel_case_types
    # - camel_case_extensions # Duplicate from pedantic
    # - library_names # Duplicate from pedantic
    - file_names
    # - library_prefixes # Duplicate from pedantic
    - non_constant_identifier_names
    - constant_identifier_names # prefer
    - directives_ordering
    - lines_longer_than_80_chars # avoid
    # - curly_braces_in_flow_control_structures # Duplicate from pedantic

    # DOCUMENTATION
    # - slash_for_doc_comments # Duplicate from pedantic
    - package_api_docs # prefer
    # - public_member_api_docs # prefer # Enable when doing documentation
    #- comment_references # Unused because https://github.com/dart-lang/sdk/issues/36974

    # USAGE
    - implementation_imports
    # - avoid_relative_lib_imports # prefer # Duplicate from pedantic
    # - prefer_relative_imports # prefer # We have our own style
    # - prefer_adjacent_string_concatenation # Duplicate from pedantic
    - prefer_interpolation_to_compose_strings # prefer
    - unnecessary_brace_in_string_interps # avoid
    # - prefer_collection_literals # Duplicate from pedantic
    - avoid_function_literals_in_foreach_calls # avoid
    # - prefer_iterable_whereType # Duplicate from pedantic
    - prefer_function_declarations_over_variables
    - unnecessary_lambdas
    # - prefer_equal_for_default_values # Duplicate from pedantic
    # - avoid_init_to_null # Duplicate from pedantic
    - unnecessary_getters_setters
    #- unnecessary_getters # prefer # Disabled pending fix: https://github.com/dart-lang/linter/issues/23
    #- prefer_expression_function_bodies # consider
    # - unnecessary_this # Duplicate from pedantic
    - prefer_initializing_formals
    # - type_init_formals # Duplicate from pedantic
    # - empty_constructor_bodies # Duplicate from pedantic
    # - unnecessary_new # Duplicate from pedantic
    # - unnecessary_const # Duplicate from pedantic
    - avoid_catches_without_on_clauses # avoid
    - avoid_catching_errors
    # - use_rethrow_when_possible # Duplicate from pedantic

    # DESIGN
    - use_to_and_as_if_applicable # prefer
    - one_member_abstracts # avoid
    - avoid_classes_with_only_static_members # avoid
    - prefer_mixin
    # - prefer_final_fields # prefer # Duplicate from pedantic
    - use_setters_to_change_properties
    - avoid_setters_without_getters
    - avoid_returning_null # avoid
    - avoid_returning_this # avoid
    - type_annotate_public_apis # prefer
    - prefer_typing_uninitialized_variables # consider
    # - omit_local_variable_types # avoid # Duplicate from pedantic
    - avoid_types_on_closure_parameters # avoid
    # - avoid_return_types_on_setters # avoid # Duplicate from pedantic
    # - prefer_generic_function_type_aliases # Duplicate from pedantic
    - avoid_private_typedef_functions # prefer
    #- use_function_type_syntax_for_parameters # consider
    - avoid_positional_boolean_parameters # avoid
    - hash_and_equals
    - avoid_equals_and_hash_code_on_mutable_classes # avoid
    # - avoid_null_checks_in_equality_operators # Duplicate from pedantic

    # Custom
    - avoid_bool_literals_in_conditional_expressions
    - cascade_invocations
    - close_sinks
    - only_throw_errors
    - prefer_const_constructors
    - prefer_final_locals
    - prefer_is_not_operator
    - prefer_null_aware_operators
    - unnecessary_await_in_return
    - unnecessary_null_aware_assignments
    - unnecessary_overrides
